{{- if .Values.enterprise.config.horizontalScaling.enabled }}
{{- if not .Values.enterprise.config.redis.external }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-redis
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-redis
  annotations:
    cache/type: "redis"
spec:
  serviceName: {{ .Release.Name }}-redis
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-redis
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-redis
    spec:
      containers:
      - name: redis
        image: {{ .Values.enterprise.config.redis.redis.image }}
        env:
        - name: REDIS_PASSWORD
          value: {{ .Values.enterprise.config.redis.redis.password }}
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: redis-data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.enterprise.config.redis.redis.persistence.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-redis
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-redis
  annotations:
    service/cache: "redis"
spec:
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  selector:
    app: {{ .Release.Name }}-redis
{{- end }}
{{- end }}