{{- if not .Values.enterprise.config.database.external }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgresql
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-postgresql
  annotations:
    database/type: "postgresql"
spec:
  serviceName: {{ .Release.Name }}-postgresql
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgresql
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgresql
    spec:
      containers:
      - name: postgresql
        image: {{ .Values.enterprise.config.postgresql.image }}
        env:
        - name: POSTGRES_DB
          value: {{ .Values.enterprise.config.postgresql.database }}
        - name: POSTGRES_USER
          value: {{ .Values.enterprise.config.postgresql.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.enterprise.config.postgresql.password }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: postgresql
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
          subPath: pgdata  # Added this line
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.enterprise.config.postgresql.persistence.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgresql
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-postgresql
  annotations:
    service/database: "postgresql"
spec:
  ports:
  - port: 5432
    targetPort: postgresql
    protocol: TCP
    name: postgresql
  selector:
    app: {{ .Release.Name }}-postgresql
{{- end }}